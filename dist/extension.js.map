{"version":3,"sources":["../webpack/bootstrap",".././src/editor.ts",".././src/extension.ts","../external \"vscode\""],"names":[],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/extension.ts\");\n","import * as vscode from 'vscode';\r\n\r\nfunction replaceModuleExports(editor: vscode.TextEditor, replaceWith: string) {\r\n    const document = editor.document;\r\n    const { exportsLine } = getExportsLineInText(document);\r\n\r\n    const start = document.lineAt(exportsLine).range.start;\r\n    const end = document.lineAt(document.lineCount - 1).range.end;\r\n\r\n    return editor.edit(editBuilder => {\r\n        editBuilder.replace(new vscode.Range(start, end), replaceWith);\r\n    });\r\n}\r\n\r\n// Get the line in the text where the module.exports resides\r\nfunction getExportsLineInText(document: vscode.TextDocument) {\r\n    let resultIndex = -1;\r\n    let resultText = '';\r\n    for (let i = document.lineCount - 1; i >= 0; --i) {\r\n        const sourceLine = document.lineAt(i).text;\r\n        if (sourceLine && sourceLine.includes('module.exports')) {\r\n            resultIndex = i;\r\n            resultText = sourceLine;\r\n            break;\r\n        }\r\n    }\r\n\r\n    return { exportsLine: resultIndex, exportsText: resultText };\r\n}\r\n\r\n// Returns the type of the module.exports line.\r\n// Types are:\r\n//  empty -> module.exports = {};\r\n//  inline -> module.exports = { something, somethingElse };\r\n//  single -> module.exports = something;\r\n//  list -> module.exports = {\r\n//      something,\r\n//      somethingElse,\r\n//  }; \r\nfunction getExportsType(document: vscode.TextDocument) {\r\n    let result = '';\r\n    for (let i = document.lineCount - 1; i >= 0; --i) {\r\n        const sourceLine = document.lineAt(i).text;\r\n        if (sourceLine && sourceLine.includes('module.exports')) {\r\n            if (sourceLine.replace(/\\s/g, '').includes('{}')) {\r\n                result = 'empty';\r\n            } else if (sourceLine.includes('}')) {\r\n                result = 'inline';\r\n            } else if (!sourceLine.includes('{') && !sourceLine.includes('}')) {\r\n                result = 'single';\r\n            } else if (!sourceLine.includes('}')) {\r\n                result = 'list';\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n// Should be used when module.exports does not exist in the file\r\nfunction newExportStatement(editor: vscode.TextEditor, functionNames: string[], exclusive = false) {\r\n    if (!functionNames || functionNames.length === 0) { return; }\r\n\r\n    const document = editor.document;\r\n    return editor.edit(editBuilder => {\r\n        const lastLine = document.lineAt(document.lineCount - 1).range.end;\r\n        let lineToInsert = '';\r\n        if (exclusive && functionNames.length === 1) {\r\n            lineToInsert = `\\n\\nmodule.exports = ${functionNames[0]};`;\r\n        } else {\r\n            lineToInsert = `\\n\\nmodule.exports = { ${functionNames.join(', ')} };`;\r\n        }\r\n\r\n        editBuilder.insert(lastLine, lineToInsert);\r\n    });\r\n}\r\n\r\n// Should be used when module.exports = { }; exists in the file, but nothing is expoorted yet\r\nfunction addToExport(editor: vscode.TextEditor, functionNames: string[]) {\r\n    if (!functionNames || functionNames.length === 0) { return; }\r\n\r\n    const document = editor.document;\r\n    const { exportsLine } = getExportsLineInText(document);\r\n    return editor.edit(editBuilder => {\r\n        const start = new vscode.Position(exportsLine, document.lineAt(exportsLine).range.end.character - 2);\r\n        const end = new vscode.Position(exportsLine, document.lineAt(exportsLine).range.end.character);\r\n\r\n        editBuilder.replace(new vscode.Range(start, end), `${functionNames.join(', ')} };`);\r\n    });\r\n}\r\n\r\nfunction inlineAppendToExport(editor: vscode.TextEditor, functionNames: string[]) {\r\n    if (!functionNames || functionNames.length === 0) { return; }\r\n\r\n    const document = editor.document;\r\n    const { exportsLine, exportsText } = getExportsLineInText(document);\r\n\r\n    // Possible optimization: go over the string one time symbol by symbol instead of a chain of methods that each go over a string\r\n    const alreadExportedFunctions = exportsText.replace(/\\s+/g, '').replace(/^module.exports={/, '').replace(/[};]/g, '').split(',').map(fn => fn.trim());\r\n    const filteredNames: string[] = [];\r\n    functionNames.forEach(name => {\r\n        if (!alreadExportedFunctions.includes(name)) {\r\n            filteredNames.push(name);\r\n        }\r\n    });\r\n\r\n    if (filteredNames.length > 0) {\r\n        return editor.edit(editBuilder => {\r\n            const start = new vscode.Position(exportsLine, document.lineAt(exportsLine).range.end.character - 3);\r\n            const end = new vscode.Position(exportsLine, document.lineAt(exportsLine).range.end.character);\r\n\r\n            editBuilder.replace(new vscode.Range(start, end), `, ${filteredNames.join(', ')} };`);\r\n        });\r\n    }\r\n}\r\n\r\nfunction listAppendToExport(editor: vscode.TextEditor, functionNames: string[]) {\r\n    if (!functionNames || functionNames.length === 0) { return; }\r\n\r\n    const document = editor.document;\r\n    const { exportsLine } = getExportsLineInText(document);\r\n\r\n    // Find the end of the module.exports statement\r\n    let endLine = -1;\r\n    const alreadyExportedFunctions: string[] = [];\r\n    for (let i = exportsLine; i < document.lineCount; ++i) {\r\n        const sourceLine = document.lineAt(i).text;\r\n        if (sourceLine && sourceLine.includes('}')) {\r\n            endLine = i;\r\n            break;\r\n        } else { alreadyExportedFunctions.push(sourceLine.replace(/,/g, '').trim()); }\r\n    }\r\n\r\n    const filteredNames: string[] = [];\r\n    functionNames.forEach(name => {\r\n        if (!alreadyExportedFunctions.includes(name)) {\r\n            filteredNames.push(name);\r\n        }\r\n    });\r\n\r\n    if (filteredNames.length > 0) {\r\n        return editor.edit(editBuilder => {\r\n            // If the last export doesn't contain a comma, we should add one\r\n            if (!document.lineAt(endLine - 1).text.includes(',')) {\r\n                const start = new vscode.Position(endLine - 1, document.lineAt(endLine - 1).range.end.character);\r\n                editBuilder.replace(start, ',');\r\n            }\r\n\r\n            const start = new vscode.Position(endLine, document.lineAt(endLine).range.end.character - 2);\r\n            const end = new vscode.Position(endLine, document.lineAt(endLine).range.end.character);\r\n\r\n            editBuilder.replace(new vscode.Range(start, end), `\\t${filteredNames.join(',\\n\\t')},\\n};`);\r\n        });\r\n    }\r\n}\r\n\r\nfunction replaceSingleExport(editor: vscode.TextEditor, functionNames: string[]) {\r\n    if (!functionNames || functionNames.length === 0) { return; }\r\n\r\n    const document = editor.document;\r\n    const { exportsLine, exportsText } = getExportsLineInText(document);\r\n\r\n    const match = exportsText.replace(';', '').match(/[^=]*$/);\r\n    if (match) {\r\n        const exportedThing = match[0].trim();\r\n        const filteredNames = functionNames.filter(name => name !== exportedThing);\r\n\r\n        if (filteredNames.length > 0) {\r\n            return editor.edit(editBuilder => {\r\n                const start = document.lineAt(exportsLine).range.start;\r\n                const end = document.lineAt(exportsLine).range.end;\r\n\r\n                editBuilder.replace(new vscode.Range(start, end), `module.exports = { ${exportedThing}, ${filteredNames.join(', ')} };`);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction replaceExport(editor: vscode.TextEditor, functionName: string) {\r\n    if (!functionName) { return; }\r\n    return replaceModuleExports(editor, `module.exports = ${functionName};`);\r\n}\r\n\r\nfunction clearExports(editor: vscode.TextEditor) {\r\n    return replaceModuleExports(editor, '');\r\n}\r\n\r\nexport {\r\n    getExportsType,\r\n    newExportStatement,\r\n    addToExport,\r\n    inlineAppendToExport,\r\n    listAppendToExport,\r\n    replaceSingleExport,\r\n    replaceExport,\r\n    clearExports,\r\n};","import * as vscode from 'vscode';\r\nimport * as modulesEditor from './editor';\r\n\r\nfunction getFunctionUnderCursor(editor: vscode.TextEditor) {\r\n\tlet line = editor.selection.active.line;\r\n\r\n\tfor (let i = line; i >= 0; --i) {\r\n\t\tconst sourceLine = editor.document.lineAt(i).text;\r\n\t\tif (sourceLine && sourceLine.startsWith('function') || sourceLine.startsWith('async function')) {\r\n\t\t\tconst match = sourceLine.replace(/async|function/g, '').match(/^[^(]*/);\r\n\t\t\tif (match) { return match[0].trim(); }\r\n\t\t}\r\n\t}\r\n\r\n\treturn '';\r\n}\r\n\r\nasync function exportFunctions(editor: vscode.TextEditor, functionNames: string[]) {\r\n\tconst text = editor.document.getText();\r\n\tif (!text.includes('module.exports')) { // module.exports doesn't exist in the file\r\n\t\tawait modulesEditor.newExportStatement(editor, functionNames);\r\n\t} else {\r\n\t\tconst exportsType = modulesEditor.getExportsType(editor.document);\r\n\r\n\t\tif (exportsType === 'empty') { // module.exports = { }; exists in the file \r\n\t\t\tawait modulesEditor.addToExport(editor, functionNames);\r\n\t\t} else if (exportsType === 'inline') { // module.exports = { someFunctionName }; exists in the file\r\n\t\t\tawait modulesEditor.inlineAppendToExport(editor, functionNames);\r\n\t\t} else if (exportsType === 'single') { // module.exports = somename; exists in the file\r\n\t\t\tawait modulesEditor.replaceSingleExport(editor, functionNames);\r\n\t\t} else if (exportsType === 'list') { // module.exports statement expands multiple lines\r\n\t\t\tawait modulesEditor.listAppendToExport(editor, functionNames);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nasync function exportFunctionExclusive(editor: vscode.TextEditor, functionName: string) {\r\n\tconst text = editor.document.getText();\r\n\tif (!text.includes('module.exports')) {\r\n\t\tawait modulesEditor.newExportStatement(editor, [functionName], true);\r\n\t} else {\r\n\t\tawait modulesEditor.replaceExport(editor, functionName);\r\n\t}\r\n}\r\n\r\nexport function clearAllExports() {\r\n\tconst editor = vscode.window.activeTextEditor;\r\n\r\n\tif (editor) {\r\n\t\tconst text = editor.document.getText();\r\n\t\tif (text.includes('module.exports')) {\r\n\t\t\treturn modulesEditor.clearExports(editor);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function exportFunctionUnderCursorExclusive() {\r\n\tconst editor = vscode.window.activeTextEditor;\r\n\r\n\tif (editor) {\r\n\t\tconst functionName = getFunctionUnderCursor(editor);\r\n\t\treturn functionName !== '' ? exportFunctionExclusive(editor, functionName) : null;\r\n\t}\r\n}\r\n\r\nexport function exportFunctionUnderCursor() {\r\n\tconst editor = vscode.window.activeTextEditor;\r\n\r\n\tif (editor) {\r\n\t\tconst functionName = getFunctionUnderCursor(editor);\r\n\t\treturn functionName !== '' ? exportFunctions(editor, [functionName]) : null;\r\n\t}\r\n}\r\n\r\nexport function exportAllFunctions() {\r\n\tconst editor = vscode.window.activeTextEditor;\r\n\r\n\tif (editor) {\r\n\t\tconst document = editor.document;\r\n\t\tconst functionNames: string[] = [];\r\n\t\tfor (let i = 0; i < document.lineCount; ++i) {\r\n\t\t\tconst sourceLine = document.lineAt(i).text;\r\n\t\t\tif (sourceLine && sourceLine.startsWith('function') || sourceLine.startsWith('async function')) {\r\n\t\t\t\tconst match = sourceLine.replace(/async|function/g, '').match(/^[^(]*/);\r\n\t\t\t\tif (match) { functionNames.push(match[0].trim()); }\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn functionNames.length > 0 ? exportFunctions(editor, functionNames) : null;\r\n\t}\r\n}\r\n\r\nexport function activate(context: vscode.ExtensionContext) {\r\n\tconst underCursor = vscode.commands.registerCommand('module-exports.exportFunctionUnderCursor', exportFunctionUnderCursor);\r\n\tconst all = vscode.commands.registerCommand('module-exports.exportAllFunctions', exportAllFunctions);\r\n\tconst exclusive = vscode.commands.registerCommand('module-exports.exportFunctionUnderCursorExclusive', exportFunctionUnderCursorExclusive);\r\n\tconst clear = vscode.commands.registerCommand('module-exports.clearAllExports', clearAllExports);\r\n\tcontext.subscriptions.push(underCursor);\r\n\tcontext.subscriptions.push(all);\r\n\tcontext.subscriptions.push(exclusive);\r\n\tcontext.subscriptions.push(clear);\r\n}\r\n\r\nexport function deactivate() {\r\n\r\n}","module.exports = require(\"vscode\");"],"sourceRoot":""}